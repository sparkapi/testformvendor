<% if ! session[:id_token] %>
<% content_for :head do %>
  <script type="text/javascript">
      $(document).ready(function() {
          // Restore configuration information from sessionStorage
          OIDC.restoreInfo();
          var token, code, id_token, user_info, issuer;

          // Get ID Token: Returns ID Token if valid, else error. 
          try {
            id_token = OIDC.getValidIdToken();
            var payload_obj = OIDC.getIdTokenPayload(id_token);
            issuer = payload_obj['iss']; 
            // make it look nicer for viewing
            var pretty = JSON.stringify( 
              OIDC.getIdTokenPayload(id_token),
              undefined, 2
              );
            $("#id_token").text(pretty);
          } catch(e) {
            $("#id_token").html("Error: " + e.message);
          }

          // Get OAuth2 authorization code
          try {
            code = OIDC.getCode();
            $("#code").html(code);
          } catch(e) {
            $("#code").html("Error: " + e.message);
          }
          
          // Get Access Token
          try {
            token = OIDC.getAccessToken();
            $("#token").html(token);

          } catch(e) {
            $("#token").html("Error: " + e.message);
          }

          // Look up extra Claims from UserInfo Endpoint
          try
          {
            userinfo = OIDC.userinfo();
            if ( userinfo )
            {
              var pretty = JSON.stringify( 
                  userinfo,
                  undefined, 2
                  );
              $("#userinfo").text(pretty);
            }
          } catch(e) {
            $("#userinfo").html("Error: " + e.message);
          }

          /* Query Spark API for some properties using Access Token above,
           * only if it was obtained from the Spark IdP
           */
          try
          {
            if ( issuer == "https://openidp.fbsdata.com" 
              || issuer == "https://sparkplatform.com"
            )
            {
              // expires_in parameter in the URL
              var expires_in = getExpiresIn();
              // first, try to give our access token to Spark API
              if ( token )
                $("#properties").load('/properties', {access_token: token, expires_in: expires_in} );
              // if we don't have one, give the authorization code next
              else if ( code )
                $("#properties").load('/properties', {code: code, expires_in: expires_in} );
              else
                $("#properites").html("No access token or authoriztion code provided");
            }
            else
            {
              $("#properties").html("I don't trust identities from " + issuer + "!");
            }

          } catch(e) {
            $("#properties").html("Error: " + e.message);
          }

          // AJAX call to load the flow diagram content
          try
          {
            var flow = tokens2Flow({ 
              id_token: id_token,
              code: code,
              token: token});
            console.log("flow: '" + flow + "'");
            $("#flow_diagram").load('/diagram', { flow: flow });
          } catch(e) {
            $("#flow_diagram").html("Error: " + e.message);
          }
      });
    </script>
  <% end %>
<% end %>
<% content_for :page_header do %>
  <h1>Test Form Vendor Callback</h1>
<% end %>
  <div class="container">
    <div class="row">
      <div class="col-md-2">
        <a href='http://TestFormVendor.com' class='btn btn-primary'>Back</a>
      </div>
    </div>
  
    <div class="row">
      <div class="col-md-6">
        <h4>ID Token</h4>
        <pre id="id_token"><% if session[:id_token] %>
# populated server side:
<%= session[:id_token] %>
<% end %></pre> 
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">
        <h4>OAuth2 Authorization Code</h4>
        <pre id="code"><% if params[:code] %>
# request parameter, seen server side
<%= params[:code] %>
<%end %></pre>
      </div>
    </div>

    <div class="row">
      <div class="col-md-6">
        <h4>OAuth2 Access Token</h4>
        <pre id="token"><% if session[:access_token] %>
# populated server side
<%= session[:access_token] %>
<% end %></pre>
      </div>
    </div>

    <% if session[:refresh_token] %> 
    <div class="row">
      <div class="col-md-6">
        <h4>OAuth2 Refresh Token</h4>
        <pre id="refresh">
# populated server side
<%= session[:refresh_token] %>
</pre>
      </div>
    </div>
    <% end %>

    <div class="row">
      <div class="col-md-8">
        <h4>UserInfo Endpoint</h4>
        <pre id="userinfo"><% if session[:userinfo] %>
# populated server side
<%= session[:userinfo] %>
<% end%></pre> 
      </div>
    </div>

      
    <div class="row">
      <div class="col-md-8">
        <h4>Properties From Spark API</h4>
        <pre id="properties"><%= @properties %></pre> 
      </div>
    </div>

    <div class="row flow-padding" id="flow_diagram"><% if session[:id_token] %>
      <%= render partial: "diagram_authorization_code" %>
    <%end %></div> 

    <div class="row">
      <div class="col-md-2">
        <a href='http://TestFormVendor.com' class='btn btn-primary'>Back</a>
      </div>
    </div>

  </div>  <!-- container -->

